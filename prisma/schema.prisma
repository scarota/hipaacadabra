generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "typedSql"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model customers {
  id       String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String     @db.String(255)
  email    String     @db.String(255)
  imageUrl String     @map("image_url") @db.String(255)
  org_code String     @default("0") @db.String(20)
  invoice  invoices[]
}

model invoices {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customerId String    @map("customer_id") @db.Uuid
  amount     Int
  status     String    @db.String(255)
  date       DateTime  @db.Date
  customers  customers @relation(fields: [customerId], references: [id])
}

model portal_api_configs {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  org_code      String         @unique @db.String(20)
  api_key       String         @db.String(255) // Encrypted
  base_url      String         @db.String(255)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  field_mappings field_mappings[]
}

model field_mappings {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  org_code      String    @db.String(20)
  mapping_type  String    @db.String(50) // e.g., "patient", "appointment", "invoice"
  endpoint      String    @db.String(255)
  mappings      Json      // Stores the field mappings as JSON
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  api_config    portal_api_configs @relation(fields: [org_code], references: [org_code])
  
  @@unique([org_code, mapping_type]) // Ensure one mapping per type per organization
  @@map("field_mappings")
}
